// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int      @id @default(autoincrement())
  email         String   @unique(map: "email") @db.VarChar(255)
  name          String   @db.VarChar(100)
  gender        String   @db.VarChar(15)
  birth         DateTime @db.Date
  address       String   @db.VarChar(255)
  detailAddress String?  @map("detail_address") @db.VarChar(255)
  phoneNumber   String   @map("phone_number") @db.VarChar(15)

  userFavorCategories UserFavorCategory[]
  userStoreReviews  UserStoreReview[] 
  userMission UserMission[]

  @@map("user")
	
}

model FoodCategory {
  id    Int    @id @default(autoincrement())
  name String @db.VarChar(100)

  userFavorCategories UserFavorCategory[]

  @@map("food_category")
}

model UserFavorCategory {
  id             Int          @id @default(autoincrement())
  user           User         @relation(fields: [userId], references: [id])
  userId         Int          @map("user_id")
  foodCategory   FoodCategory @relation(fields: [foodCategoryId], references: [id])
  foodCategoryId Int          @map("food_category_id")

  @@index([foodCategoryId], map: "f_category_id")
  @@index([userId], map: "user_id")
  @@map("user_favor_category")
}

model Store{
  id Int @id @default(autoincrement())
  name String @db.VarChar(50)
  
  userStoreReviews  UserStoreReview[] 
  mission Mission[]
  @@map("store")
}

model UserStoreReview{
  id Int @id @default(autoincrement())
  store Store @relation(fields:[storeId],references:[id])
  storeId Int @map("store_id")
  user User @relation(fields:[userId],references:[id])
  userId Int @map("user_id")
  score Int @map("score")
  content String @db.Text 

  @@index([userId], map: "user_id")
  @@index([storeId], map: "store_id")
  @@map("user_store_review")
}

model Mission{
  id Int @id @default(autoincrement())
  store Store @relation(fields:[storeId],references:[id])
  storeId Int @map("store_id")
  name String @db.VarChar(50)
  description String @db.VarChar(100)
  point Int @map("point")
  deadline DateTime @db.Date

  userMission UserMission[]
  @@index([storeId], map: "store_id")
  @@map("mission")
  
}

model UserMission{
  id Int @id @default(autoincrement())
  user User @relation(fields:[userId],references:[id])
  userId Int @map("user_id")
  mission Mission @relation(fields:[missionId],references:[id])
  missionId Int @map("mission_id")
  complete Int @map("complete")

  @@index([userId], map: "user_id")
  @@index([missionId], map: "mission_id")
  @@map("user_mission")
}

model Session {
  id        String   @id
  sid       String   @unique
  data      String   @db.VarChar(512)
  expiresAt DateTime @map("expires_at")

  @@map("session")
}